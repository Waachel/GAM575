// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Animal.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Animal_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Animal_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Animal_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Animal_2eproto {
  static const ::uint32_t offsets[];
};
class Animal_proto;
struct Animal_protoDefaultTypeInternal;
extern Animal_protoDefaultTypeInternal _Animal_proto_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class Animal_proto final :
    public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Animal_proto) */ {
 public:
  inline Animal_proto() : Animal_proto(nullptr) {}
  ~Animal_proto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Animal_proto(::google::protobuf::internal::ConstantInitialized);

  Animal_proto(const Animal_proto& from);
  Animal_proto(Animal_proto&& from) noexcept
    : Animal_proto() {
    *this = ::std::move(from);
  }

  inline Animal_proto& operator=(const Animal_proto& from) {
    CopyFrom(from);
    return *this;
  }
  inline Animal_proto& operator=(Animal_proto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const Animal_proto& default_instance() {
    return *internal_default_instance();
  }
  static inline const Animal_proto* internal_default_instance() {
    return reinterpret_cast<const Animal_proto*>(
               &_Animal_proto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Animal_proto& a, Animal_proto& b) {
    a.Swap(&b);
  }
  inline void Swap(Animal_proto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Animal_proto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Animal_proto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Animal_proto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)  final;
  void CopyFrom(const Animal_proto& from);
  void MergeFrom(const Animal_proto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Animal_proto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Animal_proto";
  }
  protected:
  explicit Animal_proto(::google::protobuf::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAFieldNumber = 1,
    kBFieldNumber = 2,
    kCFieldNumber = 3,
  };
  // optional float a = 1;
  bool has_a() const;
  void clear_a() ;
  float a() const;
  void set_a(float value);

  private:
  float _internal_a() const;
  void _internal_set_a(float value);

  public:
  // optional float b = 2;
  bool has_b() const;
  void clear_b() ;
  float b() const;
  void set_b(float value);

  private:
  float _internal_b() const;
  void _internal_set_b(float value);

  public:
  // optional float c = 3;
  bool has_c() const;
  void clear_c() ;
  float c() const;
  void set_c(float value);

  private:
  float _internal_c() const;
  void _internal_set_c(float value);

  public:
  // @@protoc_insertion_point(class_scope:Animal_proto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float a_;
    float b_;
    float c_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Animal_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Animal_proto

// optional float a = 1;
inline bool Animal_proto::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Animal_proto::clear_a() {
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float Animal_proto::a() const {
  // @@protoc_insertion_point(field_get:Animal_proto.a)
  return _internal_a();
}
inline void Animal_proto::set_a(float value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:Animal_proto.a)
}
inline float Animal_proto::_internal_a() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.a_;
}
inline void Animal_proto::_internal_set_a(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.a_ = value;
}

// optional float b = 2;
inline bool Animal_proto::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Animal_proto::clear_b() {
  _impl_.b_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float Animal_proto::b() const {
  // @@protoc_insertion_point(field_get:Animal_proto.b)
  return _internal_b();
}
inline void Animal_proto::set_b(float value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:Animal_proto.b)
}
inline float Animal_proto::_internal_b() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.b_;
}
inline void Animal_proto::_internal_set_b(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.b_ = value;
}

// optional float c = 3;
inline bool Animal_proto::has_c() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Animal_proto::clear_c() {
  _impl_.c_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float Animal_proto::c() const {
  // @@protoc_insertion_point(field_get:Animal_proto.c)
  return _internal_c();
}
inline void Animal_proto::set_c(float value) {
  _internal_set_c(value);
  // @@protoc_insertion_point(field_set:Animal_proto.c)
}
inline float Animal_proto::_internal_c() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.c_;
}
inline void Animal_proto::_internal_set_c(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.c_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Animal_2eproto_2epb_2eh
