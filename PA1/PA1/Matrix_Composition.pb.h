// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Matrix_Composition.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Matrix_5fComposition_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Matrix_5fComposition_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "Vect.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Matrix_5fComposition_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Matrix_5fComposition_2eproto {
  static const ::uint32_t offsets[];
};
class Matrix_Composition_proto;
struct Matrix_Composition_protoDefaultTypeInternal;
extern Matrix_Composition_protoDefaultTypeInternal _Matrix_Composition_proto_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class Matrix_Composition_proto final :
    public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Matrix_Composition_proto) */ {
 public:
  inline Matrix_Composition_proto() : Matrix_Composition_proto(nullptr) {}
  ~Matrix_Composition_proto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Matrix_Composition_proto(::google::protobuf::internal::ConstantInitialized);

  Matrix_Composition_proto(const Matrix_Composition_proto& from);
  Matrix_Composition_proto(Matrix_Composition_proto&& from) noexcept
    : Matrix_Composition_proto() {
    *this = ::std::move(from);
  }

  inline Matrix_Composition_proto& operator=(const Matrix_Composition_proto& from) {
    CopyFrom(from);
    return *this;
  }
  inline Matrix_Composition_proto& operator=(Matrix_Composition_proto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const Matrix_Composition_proto& default_instance() {
    return *internal_default_instance();
  }
  static inline const Matrix_Composition_proto* internal_default_instance() {
    return reinterpret_cast<const Matrix_Composition_proto*>(
               &_Matrix_Composition_proto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Matrix_Composition_proto& a, Matrix_Composition_proto& b) {
    a.Swap(&b);
  }
  inline void Swap(Matrix_Composition_proto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Matrix_Composition_proto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Matrix_Composition_proto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Matrix_Composition_proto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)  final;
  void CopyFrom(const Matrix_Composition_proto& from);
  void MergeFrom(const Matrix_Composition_proto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Matrix_Composition_proto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Matrix_Composition_proto";
  }
  protected:
  explicit Matrix_Composition_proto(::google::protobuf::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kV0FieldNumber = 1,
    kV1FieldNumber = 2,
    kV2FieldNumber = 3,
    kV3FieldNumber = 4,
  };
  // optional .Vect_proto v0 = 1;
  bool has_v0() const;
  void clear_v0() ;
  const ::Vect_proto& v0() const;
  PROTOBUF_NODISCARD ::Vect_proto* release_v0();
  ::Vect_proto* mutable_v0();
  void set_allocated_v0(::Vect_proto* value);
  void unsafe_arena_set_allocated_v0(::Vect_proto* value);
  ::Vect_proto* unsafe_arena_release_v0();

  private:
  const ::Vect_proto& _internal_v0() const;
  ::Vect_proto* _internal_mutable_v0();

  public:
  // optional .Vect_proto v1 = 2;
  bool has_v1() const;
  void clear_v1() ;
  const ::Vect_proto& v1() const;
  PROTOBUF_NODISCARD ::Vect_proto* release_v1();
  ::Vect_proto* mutable_v1();
  void set_allocated_v1(::Vect_proto* value);
  void unsafe_arena_set_allocated_v1(::Vect_proto* value);
  ::Vect_proto* unsafe_arena_release_v1();

  private:
  const ::Vect_proto& _internal_v1() const;
  ::Vect_proto* _internal_mutable_v1();

  public:
  // optional .Vect_proto v2 = 3;
  bool has_v2() const;
  void clear_v2() ;
  const ::Vect_proto& v2() const;
  PROTOBUF_NODISCARD ::Vect_proto* release_v2();
  ::Vect_proto* mutable_v2();
  void set_allocated_v2(::Vect_proto* value);
  void unsafe_arena_set_allocated_v2(::Vect_proto* value);
  ::Vect_proto* unsafe_arena_release_v2();

  private:
  const ::Vect_proto& _internal_v2() const;
  ::Vect_proto* _internal_mutable_v2();

  public:
  // optional .Vect_proto v3 = 4;
  bool has_v3() const;
  void clear_v3() ;
  const ::Vect_proto& v3() const;
  PROTOBUF_NODISCARD ::Vect_proto* release_v3();
  ::Vect_proto* mutable_v3();
  void set_allocated_v3(::Vect_proto* value);
  void unsafe_arena_set_allocated_v3(::Vect_proto* value);
  ::Vect_proto* unsafe_arena_release_v3();

  private:
  const ::Vect_proto& _internal_v3() const;
  ::Vect_proto* _internal_mutable_v3();

  public:
  // @@protoc_insertion_point(class_scope:Matrix_Composition_proto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 4, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Vect_proto* v0_;
    ::Vect_proto* v1_;
    ::Vect_proto* v2_;
    ::Vect_proto* v3_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Matrix_5fComposition_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Matrix_Composition_proto

// optional .Vect_proto v0 = 1;
inline bool Matrix_Composition_proto::has_v0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.v0_ != nullptr);
  return value;
}
inline const ::Vect_proto& Matrix_Composition_proto::_internal_v0() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Vect_proto* p = _impl_.v0_;
  return p != nullptr ? *p : reinterpret_cast<const ::Vect_proto&>(::_Vect_proto_default_instance_);
}
inline const ::Vect_proto& Matrix_Composition_proto::v0() const {
  // @@protoc_insertion_point(field_get:Matrix_Composition_proto.v0)
  return _internal_v0();
}
inline void Matrix_Composition_proto::unsafe_arena_set_allocated_v0(::Vect_proto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.v0_);
  }
  _impl_.v0_ = reinterpret_cast<::Vect_proto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Matrix_Composition_proto.v0)
}
inline ::Vect_proto* Matrix_Composition_proto::release_v0() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Vect_proto* released = _impl_.v0_;
  _impl_.v0_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Vect_proto* Matrix_Composition_proto::unsafe_arena_release_v0() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Matrix_Composition_proto.v0)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Vect_proto* temp = _impl_.v0_;
  _impl_.v0_ = nullptr;
  return temp;
}
inline ::Vect_proto* Matrix_Composition_proto::_internal_mutable_v0() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.v0_ == nullptr) {
    auto* p = CreateMaybeMessage<::Vect_proto>(GetArenaForAllocation());
    _impl_.v0_ = reinterpret_cast<::Vect_proto*>(p);
  }
  return _impl_.v0_;
}
inline ::Vect_proto* Matrix_Composition_proto::mutable_v0() {
  ::Vect_proto* _msg = _internal_mutable_v0();
  // @@protoc_insertion_point(field_mutable:Matrix_Composition_proto.v0)
  return _msg;
}
inline void Matrix_Composition_proto::set_allocated_v0(::Vect_proto* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.v0_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.v0_ = reinterpret_cast<::Vect_proto*>(value);
  // @@protoc_insertion_point(field_set_allocated:Matrix_Composition_proto.v0)
}

// optional .Vect_proto v1 = 2;
inline bool Matrix_Composition_proto::has_v1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.v1_ != nullptr);
  return value;
}
inline const ::Vect_proto& Matrix_Composition_proto::_internal_v1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Vect_proto* p = _impl_.v1_;
  return p != nullptr ? *p : reinterpret_cast<const ::Vect_proto&>(::_Vect_proto_default_instance_);
}
inline const ::Vect_proto& Matrix_Composition_proto::v1() const {
  // @@protoc_insertion_point(field_get:Matrix_Composition_proto.v1)
  return _internal_v1();
}
inline void Matrix_Composition_proto::unsafe_arena_set_allocated_v1(::Vect_proto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.v1_);
  }
  _impl_.v1_ = reinterpret_cast<::Vect_proto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Matrix_Composition_proto.v1)
}
inline ::Vect_proto* Matrix_Composition_proto::release_v1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Vect_proto* released = _impl_.v1_;
  _impl_.v1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Vect_proto* Matrix_Composition_proto::unsafe_arena_release_v1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Matrix_Composition_proto.v1)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Vect_proto* temp = _impl_.v1_;
  _impl_.v1_ = nullptr;
  return temp;
}
inline ::Vect_proto* Matrix_Composition_proto::_internal_mutable_v1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.v1_ == nullptr) {
    auto* p = CreateMaybeMessage<::Vect_proto>(GetArenaForAllocation());
    _impl_.v1_ = reinterpret_cast<::Vect_proto*>(p);
  }
  return _impl_.v1_;
}
inline ::Vect_proto* Matrix_Composition_proto::mutable_v1() {
  ::Vect_proto* _msg = _internal_mutable_v1();
  // @@protoc_insertion_point(field_mutable:Matrix_Composition_proto.v1)
  return _msg;
}
inline void Matrix_Composition_proto::set_allocated_v1(::Vect_proto* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.v1_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.v1_ = reinterpret_cast<::Vect_proto*>(value);
  // @@protoc_insertion_point(field_set_allocated:Matrix_Composition_proto.v1)
}

// optional .Vect_proto v2 = 3;
inline bool Matrix_Composition_proto::has_v2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.v2_ != nullptr);
  return value;
}
inline const ::Vect_proto& Matrix_Composition_proto::_internal_v2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Vect_proto* p = _impl_.v2_;
  return p != nullptr ? *p : reinterpret_cast<const ::Vect_proto&>(::_Vect_proto_default_instance_);
}
inline const ::Vect_proto& Matrix_Composition_proto::v2() const {
  // @@protoc_insertion_point(field_get:Matrix_Composition_proto.v2)
  return _internal_v2();
}
inline void Matrix_Composition_proto::unsafe_arena_set_allocated_v2(::Vect_proto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.v2_);
  }
  _impl_.v2_ = reinterpret_cast<::Vect_proto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Matrix_Composition_proto.v2)
}
inline ::Vect_proto* Matrix_Composition_proto::release_v2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Vect_proto* released = _impl_.v2_;
  _impl_.v2_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Vect_proto* Matrix_Composition_proto::unsafe_arena_release_v2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Matrix_Composition_proto.v2)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Vect_proto* temp = _impl_.v2_;
  _impl_.v2_ = nullptr;
  return temp;
}
inline ::Vect_proto* Matrix_Composition_proto::_internal_mutable_v2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.v2_ == nullptr) {
    auto* p = CreateMaybeMessage<::Vect_proto>(GetArenaForAllocation());
    _impl_.v2_ = reinterpret_cast<::Vect_proto*>(p);
  }
  return _impl_.v2_;
}
inline ::Vect_proto* Matrix_Composition_proto::mutable_v2() {
  ::Vect_proto* _msg = _internal_mutable_v2();
  // @@protoc_insertion_point(field_mutable:Matrix_Composition_proto.v2)
  return _msg;
}
inline void Matrix_Composition_proto::set_allocated_v2(::Vect_proto* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.v2_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.v2_ = reinterpret_cast<::Vect_proto*>(value);
  // @@protoc_insertion_point(field_set_allocated:Matrix_Composition_proto.v2)
}

// optional .Vect_proto v3 = 4;
inline bool Matrix_Composition_proto::has_v3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.v3_ != nullptr);
  return value;
}
inline const ::Vect_proto& Matrix_Composition_proto::_internal_v3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Vect_proto* p = _impl_.v3_;
  return p != nullptr ? *p : reinterpret_cast<const ::Vect_proto&>(::_Vect_proto_default_instance_);
}
inline const ::Vect_proto& Matrix_Composition_proto::v3() const {
  // @@protoc_insertion_point(field_get:Matrix_Composition_proto.v3)
  return _internal_v3();
}
inline void Matrix_Composition_proto::unsafe_arena_set_allocated_v3(::Vect_proto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.v3_);
  }
  _impl_.v3_ = reinterpret_cast<::Vect_proto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Matrix_Composition_proto.v3)
}
inline ::Vect_proto* Matrix_Composition_proto::release_v3() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Vect_proto* released = _impl_.v3_;
  _impl_.v3_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Vect_proto* Matrix_Composition_proto::unsafe_arena_release_v3() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Matrix_Composition_proto.v3)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Vect_proto* temp = _impl_.v3_;
  _impl_.v3_ = nullptr;
  return temp;
}
inline ::Vect_proto* Matrix_Composition_proto::_internal_mutable_v3() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.v3_ == nullptr) {
    auto* p = CreateMaybeMessage<::Vect_proto>(GetArenaForAllocation());
    _impl_.v3_ = reinterpret_cast<::Vect_proto*>(p);
  }
  return _impl_.v3_;
}
inline ::Vect_proto* Matrix_Composition_proto::mutable_v3() {
  ::Vect_proto* _msg = _internal_mutable_v3();
  // @@protoc_insertion_point(field_mutable:Matrix_Composition_proto.v3)
  return _msg;
}
inline void Matrix_Composition_proto::set_allocated_v3(::Vect_proto* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.v3_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.v3_ = reinterpret_cast<::Vect_proto*>(value);
  // @@protoc_insertion_point(field_set_allocated:Matrix_Composition_proto.v3)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Matrix_5fComposition_2eproto_2epb_2eh
