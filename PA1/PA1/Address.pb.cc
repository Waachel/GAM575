// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Address.proto

#include "Address.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR Address_proto::Address_proto(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.poname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.poaddr_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.pophone_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct Address_protoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Address_protoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Address_protoDefaultTypeInternal() {}
  union {
    Address_proto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Address_protoDefaultTypeInternal _Address_proto_default_instance_;
// ===================================================================

class Address_proto::_Internal {
 public:
  using HasBits = decltype(std::declval<Address_proto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Address_proto, _impl_._has_bits_);
  static void set_has_poname(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_poaddr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_pophone(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

Address_proto::Address_proto(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Address_proto)
}
Address_proto::Address_proto(const Address_proto& from) : ::google::protobuf::MessageLite() {
  Address_proto* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.poname_){},
      decltype(_impl_.poaddr_){},
      decltype(_impl_.pophone_){},
  };
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  _impl_.poname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.poname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.poname_.Set(from._internal_poname(), _this->GetArenaForAllocation());
  }
  _impl_.poaddr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.poaddr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.poaddr_.Set(from._internal_poaddr(), _this->GetArenaForAllocation());
  }
  _impl_.pophone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.pophone_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.pophone_.Set(from._internal_pophone(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:Address_proto)
}
inline void Address_proto::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.poname_){},
      decltype(_impl_.poaddr_){},
      decltype(_impl_.pophone_){},
  };
  _impl_.poname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.poname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.poaddr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.poaddr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pophone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.pophone_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Address_proto::~Address_proto() {
  // @@protoc_insertion_point(destructor:Address_proto)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Address_proto::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.poname_.Destroy();
  _impl_.poaddr_.Destroy();
  _impl_.pophone_.Destroy();
}
void Address_proto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Address_proto::Clear() {
// @@protoc_insertion_point(message_clear_start:Address_proto)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.poname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.poaddr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.pophone_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* Address_proto::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Address_proto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Address_proto, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Address_proto_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bytes poName = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Address_proto, _impl_.poname_)}},
    // optional bytes poAddr = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Address_proto, _impl_.poaddr_)}},
    // optional bytes poPhone = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(Address_proto, _impl_.pophone_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes poName = 1;
    {PROTOBUF_FIELD_OFFSET(Address_proto, _impl_.poname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes poAddr = 2;
    {PROTOBUF_FIELD_OFFSET(Address_proto, _impl_.poaddr_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes poPhone = 3;
    {PROTOBUF_FIELD_OFFSET(Address_proto, _impl_.pophone_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Address_proto::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Address_proto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes poName = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_poname();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // optional bytes poAddr = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_poaddr();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // optional bytes poPhone = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_pophone();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Address_proto)
  return target;
}

::size_t Address_proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Address_proto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes poName = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_poname());
    }

    // optional bytes poAddr = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_poaddr());
    }

    // optional bytes poPhone = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_pophone());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Address_proto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Address_proto*>(
      &from));
}

void Address_proto::MergeFrom(const Address_proto& from) {
  Address_proto* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Address_proto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_poname(from._internal_poname());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_poaddr(from._internal_poaddr());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_pophone(from._internal_pophone());
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Address_proto::CopyFrom(const Address_proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Address_proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Address_proto::IsInitialized() const {
  return true;
}

void Address_proto::InternalSwap(Address_proto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.poname_, lhs_arena,
                                       &other->_impl_.poname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.poaddr_, lhs_arena,
                                       &other->_impl_.poaddr_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pophone_, lhs_arena,
                                       &other->_impl_.pophone_, rhs_arena);
}

std::string Address_proto::GetTypeName() const {
  return "Address_proto";
}

// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
